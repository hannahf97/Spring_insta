<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.posco.insta.post.repository.PostMapper">
    <select id="getPost" resultType="PostDto">
        SELECT
            id, userid, img, content
        From
            posts
    </select>
    <select id="getPostByUserId" resultType="SelectPostJoinUserDto">
        SELECT
            P.id, P.userId, P.img, P.content,
            U.name as userName, U.img as userImg
        From
            posts as P
        INNER JOIN
        users as U
        ON
            P.userId = U.id
        where P.userId= #{userId};
    </select>

    <insert id="insertPost" parameterType="PostDto">
        insert into posts(userid, img, content)
        values (#{userId}, #{img}, #{content});
    </insert>
    <delete id="deltePostByUserIdAndId" parameterType="PostDto">
        delete from posts where id = #{id} and userid = #{userId};
    </delete>

    <select id="getOtherPostByUserId" resultType="SelectPostJoinUserDto">
        SELECT
            P.id, P.userId, P.img, P.content,
            U.name as userName, U.img as userImg
        From
            posts as P
                INNER JOIN
            users as U
            ON
                P.userId = U.id
        where P.userId != #{userId};
    </select>

    <update id="updateMyPost" parameterType="PostDto">
        UPDATE posts
            <set>
            <if test="content!=null">content=#{content},</if>
            <if test="img!=null">img = #{img},</if>
            </set>
             where id = #{id} and userid = #{userId};
    </update>

    <select id="getPostsById" resultType="SelectPostJoinUserDto" parameterType="PostDto">
        SELECT
            p.id, p.userId, p.img, p.content,
            u.name as userName, u.img as userImg
        FROM
            posts as p
        INNER JOIN user as u
        ON u.id =p.userId
        WHERE id= #{id}
    </select>


    <select id="findPostBykey" resultType="SelectPostJoinUserDto" parameterType="String">
        SELECT
            p.id, p.userId, p.img, p.content,
            u.name as userName, u.img as userImg
        FROM
            posts as p
        INNER JOIN users as u  ON p.userId = u.id where p.content like concat('%', #{key}, '%');
    </select>

    <select id="findFollowGetPost" parameterType="PostDto" resultType="SelectPostJoinUserDto">
        select p.id, p.userId, p.img, p.content, u.name, u.img
        from
            posts AS p
                INNER JOIN users AS u on p.userId = u.id
                INNER JOIN follows as f on p.userId = f.following
        where f.follower = #{userId};
    </select>
</mapper>